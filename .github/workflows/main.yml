name: main

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10
        with:
          versionSpec: '5.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Debug --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal --logger "trx;LogFileName=test_results.xml"

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: tests/**/TestResults/*.xml

  documentation:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

      - name: Build Documentation
        uses: nunit/docfx-action@v3.2.0
        with:
          args: docfx.json

      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: Documentation
          path: _site

  release:
    needs: [build-and-test, documentation]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10
        with:
          versionSpec: '5.x'  # Specify the version range of GitVersion you want to use
          includePrerelease: false
          ignoreFailedSources: false
          preferLatestVersion: false

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10

      - name: Pack NuGet Packages
        run: dotnet pack -c Release /p:Version=${{ steps.gitversion.outputs.NuGetVersionV2 }} -o bin/

      - name: Publish to GitHub Packages
        run: dotnet nuget push "bin/*.nupkg" --source "github"
        env:
          NUGET_API_KEY: ${{ secrets.GITHUB_TOKEN }}

      - name: Store NuGet package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: NuGet Packages
          path: bin/
